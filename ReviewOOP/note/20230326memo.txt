필드

필드는 클래스에 포함된 변수로 객체의 속성값을 지정함.
지역 변수와 구분하여 사용해야함.

지역변수

메서드에 포함된 변수

필드와 지역 변수의 구분

클래스의 중괄호 안에 선언된 변수 = 필드
메서드의 중괄호 안에 선언된 변수 = 지역 변수
필드 = 힙 메모리의 객체 내부
메서드 = 스택 메모리

필드 선언

클래스 중괄호 블록 {} 어디서든 존재 가능
생성자와 메서드 중괄호 블록 내부에는 선언 불가
변수와 선언 형태 유사하나 변수 아님에 주의
클래스 외부에서 사용할 경우 반드시 객체 생성하고 참조 변수를 통해 사용해야함

ex)
class className {
    String(타입) varname(필드명) = "초기값"; (초기값 설정)
    // 초기값을 설정하지 않는다면 타입별 초기값이 자동으로 들어감.
}

생성자(Constructor)

클래스로부터 new 연산자로 객체를 생성할 때 호출되어 객체의 초기화를 담당 = 객체 선언
기본 생성자 = public 클래스이름
생성자의 이름은 클래스의 이름과 같아야함.

오버로딩(Overloading)

매개 변수를 달리하는 생성자 여러 개 선언
외부에서 제공되는 다양한 데이터를 사용하여 객체를 초기화하려면 생성자도 다양해야함
매개 변수의 타입, 개수, 순서가 달라야 오버로딩

다른 생성자 호출: this()

메서드 오버로딩

같은 이름의 메서드를 여러 개 선언
매개값을 다양하게 받아 처리할 수 있도록 하기 위함
매개 변수의 타입, 개수, 순서가 달라야함

클래스에 선언된 필드와 메소드가 모두 객체 내부에 포함되는 것은 아니다.
객체가 있어야 사용 가능한 멤버가 있고,(인스턴스 멤버) 그렇지 않은 멤버도 있다.(정적 멤버)

인스턴스 멤버

객체 마다 가지고 있는 멤버, 객체를 생성한 후 사용할 수 있는 필드와 메서드
인스턴스 필드: 힙 영역의 객체마다 가지고 있는 멤버, 객체마다 다른 데이터를 저장
인스턴스 메서드: 객체가 있어야 호출 가능한 메서드, 객체마다 가지고 있는 메서드

정적 멤버

객체와 상관없는 멤버, 클래스 코드(메서드 영역)에 위치, 클래스에 고정된 멤버
정적 필드 및 상수: 객체없이 클래스만으로도 사용 가능한 필드
정적 메서드: 객체가 없이 클래스만으로도 호출 가능한 메서드

인스턴스 멤버와 정적 멤버 선택 기준

객체마다 다를 수 있는 값 -> 인스턴스 필드로 선언
객체마다 다룰 필요가 없는 값 -> 정적 필드로 선언

정적 메서드 선언 시 주의할 점

정적 메서드 선언 시 그 내부에 인스턴스 필드 및 메서드 사용 불가
정적 메서드 선언 시 그 객체 자신 참조인 this 키워드 사용 불가